[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/msi/Documents/GitHub/Mastermind-Scala/src/main/scala/ch/makery/mastermind/view/gameController.scala","languageId":"scala","version":1,"text":"package ch.makery.mastermind.view\r\n\r\nimport ch.makery.mastermind.MainApp\r\nimport ch.makery.mastermind.model.{Peg, Row}\r\nimport scalafxml.core.macros.sfxml\r\nimport scalafx.Includes._\r\nimport scalafx.event.ActionEvent\r\nimport scalafx.scene.control.Alert.AlertType\r\nimport scala.util.{Failure, Success}\r\nimport scalafx.scene.shape.{Rectangle, Circle}\r\nimport scalafx.scene.image.{Image, ImageView}\r\nimport scalafx.scene.media.{Media, MediaPlayer}\r\nimport scalafx.scene.layout.AnchorPane\r\nimport scalafx.scene.control.{Button}\r\nimport scalafx.scene.paint.Color\r\nimport scala.util.Random\r\n\r\n\r\n@sfxml\r\nclass gameController(\r\n    peg1: Circle,\r\n    peg2: Circle,\r\n    peg3: Circle,\r\n    peg4: Circle,\r\n    peg5: Circle,\r\n    peg6: Circle,\r\n    peg7: Circle,\r\n    peg8: Circle,\r\n    peg9: Circle,\r\n    peg10: Circle,\r\n    peg11: Circle,\r\n    peg12: Circle,\r\n    peg13: Circle,\r\n    peg14: Circle,\r\n    peg15: Circle,\r\n    peg16: Circle,\r\n    peg17: Circle,\r\n    peg18: Circle,\r\n    peg19: Circle,\r\n    peg20: Circle,\r\n    peg21: Circle,\r\n    peg22: Circle,\r\n    peg23: Circle,\r\n    peg24: Circle,\r\n    peg25: Circle,\r\n    peg26: Circle,\r\n    peg27: Circle,\r\n    peg28: Circle,\r\n    peg29: Circle,\r\n    peg30: Circle,\r\n    peg31: Circle,\r\n    peg32: Circle,\r\n    peg33: Circle,\r\n    peg34: Circle,\r\n    peg35: Circle,\r\n    peg36: Circle,\r\n    peg37: Circle,\r\n    peg38: Circle,\r\n    peg39: Circle,\r\n    peg40: Circle,\r\n    pegans1: Circle,\r\n    pegans2: Circle,\r\n    pegans3: Circle,\r\n    pegans4: Circle,\r\n    c11: Circle,\r\n    c12: Circle,\r\n    c13: Circle, \r\n    c14: Circle,\r\n    c21: Circle,\r\n    c22: Circle,\r\n    c23: Circle, \r\n    c24: Circle,\r\n    c31: Circle,\r\n    c32: Circle,\r\n    c33: Circle, \r\n    c34: Circle,\r\n    c41: Circle,\r\n    c42: Circle,\r\n    c43: Circle, \r\n    c44: Circle,\r\n    c51: Circle,\r\n    c52: Circle,\r\n    c53: Circle, \r\n    c54: Circle,\r\n    c61: Circle,\r\n    c62: Circle,\r\n    c63: Circle, \r\n    c64: Circle,\r\n    c71: Circle,\r\n    c72: Circle,\r\n    c73: Circle, \r\n    c74: Circle,\r\n    c81: Circle,\r\n    c82: Circle,\r\n    c83: Circle, \r\n    c84: Circle,\r\n    c91: Circle,\r\n    c92: Circle,\r\n    c93: Circle, \r\n    c94: Circle,\r\n    c101: Circle,\r\n    c102: Circle,\r\n    c103: Circle, \r\n    c104: Circle,\r\n    redButton: Button,\r\n    blueButton: Button,\r\n    greenButton: Button,\r\n    yellowButton: Button,\r\n    orangeButton: Button,\r\n    purpleButton: Button,\r\n    clearButton: Button,\r\n    checkButton: Button\r\n) {\r\n\r\n\r\n    // Peg instances \r\n    var pegA1 = new Peg(pegans1)\r\n    var pegA2 = new Peg(pegans2)\r\n    var pegA3 = new Peg(pegans3)\r\n    var pegA4 = new Peg(pegans4)\r\n    var pegO1 = new Peg(peg1)\r\n    var pegO2 = new Peg(peg2)\r\n    var pegO3 = new Peg(peg3)\r\n    var pegO4 = new Peg(peg4)\r\n    var pegO5 = new Peg(peg5)\r\n    var pegO6 = new Peg(peg6)\r\n    var pegO7 = new Peg(peg7)\r\n    var pegO8 = new Peg(peg8)\r\n    var pegO9 = new Peg(peg9)\r\n    var pegO10 = new Peg(peg10)\r\n    var pegO11 = new Peg(peg11)\r\n    var pegO12 = new Peg(peg12)\r\n    var pegO13 = new Peg(peg13)\r\n    var pegO14 = new Peg(peg14)\r\n    var pegO15 = new Peg(peg15)\r\n    var pegO16 = new Peg(peg16)\r\n    var pegO17 = new Peg(peg17)\r\n    var pegO18 = new Peg(peg18)\r\n    var pegO19 = new Peg(peg19)\r\n    var pegO20 = new Peg(peg20)\r\n    var pegO21 = new Peg(peg21)\r\n    var pegO22 = new Peg(peg22)\r\n    var pegO23 = new Peg(peg23)\r\n    var pegO24 = new Peg(peg24)\r\n    var pegO25 = new Peg(peg25)\r\n    var pegO26 = new Peg(peg26)\r\n    var pegO27 = new Peg(peg27)\r\n    var pegO28 = new Peg(peg28)\r\n    var pegO29 = new Peg(peg29)\r\n    var pegO30 = new Peg(peg30)\r\n    var pegO31 = new Peg(peg31)\r\n    var pegO32 = new Peg(peg32)\r\n    var pegO33 = new Peg(peg33)\r\n    var pegO34 = new Peg(peg34)\r\n    var pegO35 = new Peg(peg35)\r\n    var pegO36 = new Peg(peg36)\r\n    var pegO37 = new Peg(peg37)\r\n    var pegO38 = new Peg(peg38)\r\n    var pegO39 = new Peg(peg39)\r\n    var pegO40 = new Peg(peg40)\r\n\r\n    // Pegs to check the row \r\n    var cO11 = new Peg(c11)\r\n    var cO12 = new Peg(c12)\r\n    var cO13 = new Peg(c13)\r\n    var cO14 = new Peg(c14)\r\n    var cO21 = new Peg(c21)\r\n    var cO22 = new Peg(c22)\r\n    var cO23 = new Peg(c23)\r\n    var cO24 = new Peg(c24)\r\n    var cO31 = new Peg(c31)\r\n    var cO32 = new Peg(c32)\r\n    var cO33 = new Peg(c33)\r\n    var cO34 = new Peg(c34)\r\n    var cO41 = new Peg(c41)\r\n    var cO42 = new Peg(c42)\r\n    var cO43 = new Peg(c43)\r\n    var cO44 = new Peg(c44)\r\n    var cO51 = new Peg(c51)\r\n    var cO52 = new Peg(c52)\r\n    var cO53 = new Peg(c53)\r\n    var cO54 = new Peg(c54)\r\n    var cO61 = new Peg(c61)\r\n    var cO62 = new Peg(c62)\r\n    var cO63 = new Peg(c63)\r\n    var cO64 = new Peg(c64)\r\n    var cO71 = new Peg(c71)\r\n    var cO72 = new Peg(c72)\r\n    var cO73 = new Peg(c73)\r\n    var cO74 = new Peg(c74)\r\n    var cO81 = new Peg(c81)\r\n    var cO82 = new Peg(c82)\r\n    var cO83 = new Peg(c83)\r\n    var cO84 = new Peg(c84)\r\n    var cO91 = new Peg(c91)\r\n    var cO92 = new Peg(c92)\r\n    var cO93 = new Peg(c93)\r\n    var cO94 = new Peg(c94)\r\n    var cO101 = new Peg(c101)\r\n    var cO102 = new Peg(c102)\r\n    var cO103 = new Peg(c103)\r\n    var cO104 = new Peg(c104)\r\n    \r\n    \r\n\r\n    // Row instances\r\n    var rowAns = new Row(pegA1, pegA2, pegA3, pegA4)\r\n    var row1 = new Row(pegO1, pegO2, pegO3, pegO4)\r\n    var row2 = new Row(pegO5, pegO6, pegO7, pegO8) \r\n    var row3 = new Row(pegO9, pegO10, pegO11, pegO12)\r\n    var row4 = new Row(pegO13, pegO14, pegO15, pegO16)\r\n    var row5 = new Row(pegO17, pegO18, pegO19, pegO20)\r\n    var row6 = new Row(pegO21, pegO22, pegO23, pegO24)\r\n    var row7 = new Row(pegO25, pegO26, pegO27, pegO28)\r\n    var row8 = new Row(pegO29, pegO30, pegO31, pegO32)\r\n    var row9 = new Row(pegO33, pegO34, pegO35, pegO36)\r\n    var row10 = new Row(pegO37, pegO38, pegO39, pegO40)\r\n    \r\n    \r\n    // Pegs use to check row \r\n    var checkPegs1 = new Row(cO11, cO12, cO13, cO14)\r\n    var checkPegs2 = new Row(cO21, cO22, cO23, cO24)\r\n    var checkPegs3 = new Row(cO31, cO32, cO33, cO34)\r\n    var checkPegs4 = new Row(cO41, cO42, cO43, cO44)\r\n    var checkPegs5 = new Row(cO51, cO52, cO53, cO54)\r\n    var checkPegs6 = new Row(cO61, cO62, cO63, cO64)\r\n    var checkPegs7 = new Row(cO71, cO72, cO73, cO74)\r\n    var checkPegs8 = new Row(cO81, cO82, cO83, cO84)\r\n    var checkPegs9 = new Row(cO91, cO92, cO93, cO94)\r\n    var checkPegs10 = new Row(cO101, cO102, cO103, cO104)\r\n\r\n    def randomColor(): String = {\r\n        var colors = List(\"Red\", \"Blue\", \"Green\", \"Yellow\")\r\n        var selectedColor = colors(scala.util.Random.nextInt(colors.length))\r\n        return selectedColor\r\n    }\r\n\r\n    def colorObject(colorStr: String): Color = {\r\n        if (colorStr == \"Red\") {\r\n            return scalafx.scene.paint.Color.Red\r\n        }\r\n        else if (colorStr == \"Blue\") {\r\n            return scalafx.scene.paint.Color.Blue\r\n        }\r\n        else if (colorStr == \"Green\") {\r\n            return scalafx.scene.paint.Color.Green\r\n        }\r\n        else if (colorStr == \"Yellow\") {\r\n            return scalafx.scene.paint.Color.Yellow\r\n        }\r\n        else if (colorStr == \"Orange\") {\r\n            return scalafx.scene.paint.Color.Orange\r\n        }\r\n        else if (colorStr == \"Purple\") {\r\n            return scalafx.scene.paint.Color.Purple\r\n        }\r\n        return scalafx.scene.paint.Color.White\r\n    }\r\n    \r\n\r\n    pegA1.setColor(randomColor())\r\n    pegA2.setColor(randomColor())\r\n    pegA3.setColor(randomColor())\r\n    pegA4.setColor(randomColor())\r\n\r\n    var ans = List(pegA1.getColor(), pegA2.getColor(), pegA3.getColor(), pegA4.getColor())\r\n    var colorAns = List(colorObject(pegA1.getColor()), colorObject(pegA2.getColor()), colorObject(pegA3.getColor()), colorObject(pegA4.getColor()))\r\n    var rowList = List(row1, row2, row3, row4, row5, row6, row7, row8, row9, row10)\r\n\r\n    var rowCounter = 0\r\n    var currentRow = rowList(rowCounter)\r\n    var pegCounter = 0\r\n    var currentPeg = currentRow.getPeg(pegCounter)\r\n    var checkPegsList = List(checkPegs1,checkPegs2,checkPegs3,checkPegs4,checkPegs5,checkPegs6,checkPegs7,checkPegs8,checkPegs9,checkPegs10)\r\n    var currentCheckPeg = checkPegsList(rowCounter)\r\n\r\n\r\n    def goMenu(action: ActionEvent): Unit = {\r\n        MainApp.showMainMenu()\r\n    }\r\n\r\n    def quitGame(action: ActionEvent): Unit = {\r\n        System.exit(0)\r\n    }\r\n    \r\n    def rowFull(): Boolean = {\r\n        if (pegCounter == 4) {\r\n            redButton.setVisible(false)\r\n            blueButton.setVisible(false)\r\n            greenButton.setVisible(false)\r\n            yellowButton.setVisible(false)\r\n            orangeButton.setVisible(false)\r\n            purpleButton.setVisible(false)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    def clear(action: ActionEvent): Unit = {\r\n        pegCounter = 0\r\n        currentPeg = currentRow.getPeg(pegCounter)\r\n        for (x <- 0 to 3) {\r\n            currentRow.getPeg(x).setColor(\"White\")\r\n        }\r\n        checkButton.setVisible(false)\r\n        redButton.setVisible(true)\r\n        blueButton.setVisible(true)\r\n        greenButton.setVisible(true)\r\n        yellowButton.setVisible(true)\r\n        orangeButton.setVisible(true)\r\n        purpleButton.setVisible(true)\r\n    }\r\n\r\n    def nextRound(): Unit = {\r\n        if (rowCounter == 9) {\r\n            MainApp.showLose(colorAns)\r\n        }\r\n        else {\r\n            checkButton.setVisible(false)\r\n            rowCounter += 1\r\n            currentRow = rowList(rowCounter)\r\n            pegCounter = 0\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n            currentCheckPeg = checkPegsList(rowCounter)\r\n            redButton.setVisible(true)\r\n            blueButton.setVisible(true)\r\n            greenButton.setVisible(true)\r\n            yellowButton.setVisible(true)\r\n            orangeButton.setVisible(true)\r\n            purpleButton.setVisible(true)\r\n        }  \r\n    }\r\n\r\n    def check(action: ActionEvent): Unit = {\r\n        var inputList = currentRow.getPegList()\r\n        var counter = 0\r\n        var skip = 0\r\n        var win = 0\r\n        // Check black first \r\n        for (x <- 0 to 3) {\r\n            if (inputList(x).getColor() == ans(x)) {\r\n                currentCheckPeg.getPeg(counter).setColor(\"Black\")\r\n                counter += 1\r\n                win += 1\r\n            }\r\n        }\r\n        // Then white \r\n        for (y <- 0 to 3) {\r\n            if (inputList(y).getColor() == ans(y)) {\r\n                skip += 1\r\n            }\r\n            else if (ans.contains(inputList(y).getColor())) {\r\n                currentCheckPeg.getPeg(counter).setColor(\"White\")\r\n                counter += 1\r\n            }\r\n        }\r\n\r\n        if (win == 4) {\r\n            MainApp.showWin(colorAns)\r\n        }\r\n        nextRound()        \r\n    }\r\n\r\n\r\n    checkButton.setVisible(false)\r\n\r\n    redButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Red\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n        \r\n   }\r\n    \r\n    blueButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Blue\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n   }\r\n\r\n    greenButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Green\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n   }\r\n\r\n    yellowButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Yellow\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n   }\r\n\r\n    orangeButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Orange\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n   }\r\n    \r\n    purpleButton.onAction = (e: ActionEvent) => {\r\n        currentPeg.setColor(\"Purple\")\r\n        pegCounter += 1 \r\n        if (rowFull()) {\r\n            checkButton.setVisible(true)\r\n        }\r\n        else {\r\n            currentPeg = currentRow.getPeg(pegCounter)\r\n        } \r\n   }\r\n\r\n   \r\n\r\n\r\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/msi/Documents/GitHub/Mastermind-Scala/build.sbt","languageId":"scala","version":2,"text":"name := \"mastermind\"\r\n \r\nversion := \"1.0\"\r\n \r\nscalaVersion := \"2.12.11\"\r\n \r\nfork := true\r\n\r\n\r\n// https://mvnrepository.com/artifact/org.scalafx/scalafx\r\nlibraryDependencies += \"org.scalafx\" %% \"scalafx\" % \"18.0.2-R29\"\r\n\r\n// https://mvnrepository.com/artifact/org.scalafx/scalafxml-core-sfx8\r\nlibraryDependencies += \"org.scalafx\" %% \"scalafxml-core-sfx8\" % \"0.5\"\r\n\r\n\r\naddCompilerPlugin(\"org.scalamacros\" % \"paradise\" % \"2.1.1\" cross CrossVersion.full) \r\n\r\n\r\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\Users\msi\Documents\GitHub\Mastermind-Scala\target\scala-2.12\zinc\inc_compile_2.12.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed Aug 9, 2022, 3:02:11 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, ♨1, shutdown, null})[0m
